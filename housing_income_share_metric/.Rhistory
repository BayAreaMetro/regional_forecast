length(trial2)
nrows(trial)
nrow(trial)
nrow(trial2)
# Import Libraries
library(knitr)
suppressMessages(library(plyr))
suppressMessages(library(dplyr))
library(RCurl)
library(RJSONIO)
library(reshape2)
library(httr)
# Set up census variables and directories for saving final files
key="b901231133cf7da9e4ae3dea1af2470e87b3b9e7"
ACS_year="2015"
ACS_product="5"
city=paste0("00562,00674,01640,02252,03092,05108,05164,05290,06000,08142,08310,09066,",
"09892,10345,13882,14190,14736,16000,16462,16560,17610,17918,17988,",
"19402,20018,20956,21796,22594,23168,23182,25338,26000,29504,31708,",
"33000,33056,33308,33798,39122,40438,41992,43280,43294,44112,46114,",
"46870,47710,47486,47766,48956,49187,49278,49670,50258,50916,52582,",
"53000,53070,54232,54806,55282,56784,56938,57288,57456,57764,57792,",
"58380,60102,60620,60984,62546,62980,64434,65028,65070,67000,68000,",
"68084,68252,68294,68364,68378,69084,70098,70280,70364,70770,72646,",
"73262,64140,75630,77000,78666,81204,81554,81666,83346,85922,86440,86930")
source_residence="B19013_ACS15_5YR"
source_work="B08521_ACS15_5YR"
residence_output_csv=paste0("C:/Users/sisrae/Box Sync/Data/2A_Economy/EC4_Income by Place of Residence/2015/",ACS_year,"_")
work_output_csv=paste0("C:/Users/sisrae/Box Sync/Data/2A_Economy/EC5_Income by Place of Work/2015/",ACS_year,"_")
# Import census API data for income and earnings for place of residence and workplace, respectively.
url <- paste0("http://api.census.gov/data/",ACS_year,"/acs",ACS_product,"?get=NAME,B19013_001E,B08521_001E&in=state:06&for=place:",city,"&key=",key)
# Put API data into list file
response <- content(GET(url))
# Import Libraries
library(knitr)
suppressMessages(library(plyr))
suppressMessages(library(dplyr))
library(RCurl)
library(RJSONIO)
library(reshape2)
library(httr)
# Set up census variables and directories for saving final files
key="b901231133cf7da9e4ae3dea1af2470e87b3b9e7"
ACS_year="2015"
ACS_product="5"
city=paste0("00562,00674,01640,02252,03092,05108,05164,05290,06000,08142,08310,09066,",
"09892,10345,13882,14190,14736,16000,16462,16560,17610,17918,17988,",
"19402,20018,20956,21796,22594,23168,23182,25338,26000,29504,31708,",
"33000,33056,33308,33798,39122,40438,41992,43280,43294,44112,46114,",
"46870,47710,47486,47766,48956,49187,49278,49670,50258,50916,52582,",
"53000,53070,54232,54806,55282,56784,56938,57288,57456,57764,57792,",
"58380,60102,60620,60984,62546,62980,64434,65028,65070,67000,68000,",
"68084,68252,68294,68364,68378,69084,70098,70280,70364,70770,72646,",
"73262,64140,75630,77000,78666,81204,81554,81666,83346,85922,86440,86930")
source_residence="B19013_ACS15_5YR"
source_work="B08521_ACS15_5YR"
residence_output_csv=paste0("C:/Users/sisrae/Box Sync/Data/2A_Economy/EC4_Income by Place of Residence/2015/",ACS_year,"_")
work_output_csv=paste0("C:/Users/sisrae/Box Sync/Data/2A_Economy/EC5_Income by Place of Work/2015/",ACS_year,"_")
# Import census API data for income and earnings for place of residence and workplace, respectively.
url <- paste0("http://api.census.gov/data/",ACS_year,"/acs",ACS_product,"?get=NAME,B19013_001E,B08521_001E&in=state:06&for=place:",city,"&key=",key)
# Put API data into list file
response <- content(GET(url))
#commute-share-time-metros-counties-one-year021017.R
#Script to convert Census APIs into commute share tables for national metros and Bay Area counties
#SI
#01/03/18
#Both an aggregate time for all modes and a sub-mode table are used because suppression means only totals available in some geos.
################################################################
# Variables to edit - Begin
ACS_year="2016"
ACS_product="1"
county="001,013,041,055,075,081,085,095,097"
state="06"
metro="37980,47900,26420,33100,31080,16980,19100,35620,12060"
source1="B08301_ACS16_1YR"
work_source1="B08601_ACS16_1YR"
timesource1="C08136_ACS16_1YR"
work_timesource1="C08536_ACS16_1YR"
bins_all_source="B08303_ACS_16_1YR"
bins_mode_source="C08134_ACS_16_1YR"
# Set up destination to save
share_output_csv=paste0("C:/Users/sisrae/Box Sync/Data/1A_Transportation/T1-2_Commute Mode Choice/T1_Commute Mode Share (Home)/",ACS_year,"/",ACS_year,"_")
work_share_output_csv=paste0("C:/Users/sisrae/Box Sync/Data/1A_Transportation/T1-2_Commute Mode Choice/T2_Commute Mode Share (Work)/",ACS_year,"/",ACS_year,"_")
time_output_csv=paste0("C:/Users/sisrae/Box Sync/Data/1A_Transportation/T3-4_Commute Time/T3_Commute Time (Home)/",ACS_year,"/",ACS_year,"_")
work_time_output_csv=paste0("C:/Users/sisrae/Box Sync/Data/1A_Transportation/T3-4_Commute Time/T4_Commute Time (Work)/",ACS_year,"/",ACS_year,"_")
# Census API Key
key="b901231133cf7da9e4ae3dea1af2470e87b3b9e7"
# End variables to edit
################################################################
# Import Libraries
suppressMessages(library(plyr))
suppressMessages(library(dplyr))
library(httr)
library(reshape2)
# Create variable indices for later conversion
index <- c("DriveTot_Est","DriveAlone_Est","Carpool_Est","Transit_Est","Walk_Est","Other_w_Bike_Est","Bike_Est","Other_Est","Telework_Est", "OverallTime_Est", "DATime_Est", "CPTime_Est", "PTTime_Est","Tot_lt15_Est","Tot_15to30_Est","Tot_30to45_Est","Tot_45to60_Est","Tot_60to90_Est","Tot_gt90_Est","DA_lt15_Est","DA_15to30_Est","DA_30to45_Est","DA_45to60_Est","DA_gt60_Est","CP_lt15_Est","CP_15to30_Est","CP_30to45_Est","CP_45to60_Est","CP_gt60_Est","Transit_lt15_Est","Transit_15to30_Est","Transit_30to45_Est","Transit_45to60_Est","Transit_gt60_Est") # Transport_Mode index for later reference
values <- c("Share Total Auto","Share Drive Alone","Share Carpool", "Share Transit", "Share Walk", "Share Other With Bike","Share Bike", "Share Other", "Share Work at Home", "Total Mean Travel Time", "Drive Alone Mean Travel Time", "Carpool Mean Travel Time", "Transit Mean Travel Time","Share Total Less Than 15 Minutes","Share Total 15 to 29 Minutes","Share Total 30 to 44 Minutes", "Share Total 45 to 59 Minutes","Share Total 60 to 89 Minutes", "Share Total 90 Minutes and Greater","Share Drive Alone Less Than 15 Minutes","Share Drive Alone 15 to 29 Minutes","Share Drive Alone 30 to 44 Minutes", "Share Drive Alone 45 to 59 Minutes","Share Drive Alone 60 Minutes and Greater","Share Carpool Less Than 15 Minutes","Share Carpool 15 to 29 Minutes","Share Carpool 30 to 44 Minutes", "Share Carpool 45 to 59 Minutes","Share Carpool 60 Minutes and Greater","Share Transit Less Than 15 Minutes","Share Transit 15 to 29 Minutes","Share Transit 30 to 44 Minutes", "Share Transit 45 to 59 Minutes","Share Transit 60 Minutes and Greater") #Transport_Mode_Label values for later
# API Calls
# Residence Geographies, Counties and Metros
mode_residence_county_url= paste0("https://api.census.gov/data/",ACS_year,"/acs/acs",ACS_product,"?get=NAME,B08301_001E,B08301_002E,B08301_003E,B08301_004E,B08301_010E,B08301_019E,B08301_018E,B08301_016E,B08301_017E,B08301_020E,B08301_021E&in=state:",state,"&for=county:",county,"&key=", key)
mode_residence_metro_url = paste0("https://api.census.gov/data/",ACS_year,"/acs/acs",ACS_product,"?get=NAME,B08301_001E,B08301_002E,B08301_003E,B08301_004E,B08301_010E,B08301_019E,B08301_018E,B08301_016E,B08301_017E,B08301_020E,B08301_021E&for=metropolitan+statistical+area/micropolitan+statistical+area:",metro,"&key=", key)
# Now Work, Counties and Metros
mode_work_county_url = paste0("https://api.census.gov/data/",ACS_year,"/acs/acs",ACS_product,"?get=NAME,B08601_001E,B08601_002E,B08601_003E,B08601_004E,B08601_010E,B08601_019E,B08601_018E,B08601_016E,B08601_017E,B08601_020E,B08601_021E&in=state:",state,"&for=county:",county,"&key=", key)
mode_work_metro_url = paste0("https://api.census.gov/data/",ACS_year,"/acs/acs",ACS_product,"?get=NAME,B08601_001E,B08601_002E,B08601_003E,B08601_004E,B08601_010E,B08601_019E,B08601_018E,B08601_016E,B08601_017E,B08601_020E,B08601_021E&for=metropolitan+statistical+area/micropolitan+statistical+area:",metro,"&key=", key)
# Function for bringing in data
# Puts API data into list file
# For length of list file, use first row as header
# Create and append data to data frame. Change null values to "NA."
# Geography_fields = # of geo fields at end of API call (to keep non-numeric) = metro(2), county(2), place(2),tract(3)
furl <- content(GET(mode_residence_county_url))
View(furl)
View(furl)
View(furl)
temp <- lapply(furl[[1]], function(x) ifelse(is.null(x), NA, x))
View(temp)
output_data <- data.frame(temp, stringsAsFactors=FALSE)
View(output_data)
names (output_data) <- header
header <- furl [[i]]
header <- furl [[1]]
names (output_data) <- header
View(output_data)
furl <- content(GET(url))
header <- furl [[1]]
temp <- lapply(furl[[2]], function(x) ifelse(is.null(x), NA, x))
output_data <- data.frame(temp, stringsAsFactors=FALSE)
names (output_data) <- header
View(output_data)
install.packages("ctppr")
install.packages("CTPPr")
suppressMessages(library(dplyr))
data="M:/Data/Requests/Lisa Zorn/ACS 2013-2017 In-Commute/usa_00005.csv"
USA_PUMS <- read.csv(data, header = TRUE)
names(USA_PUMS)
# NETS Data Sole Proprietor Analysis.R
# National Establishment Time-Series 2015 data
# Import Libraries
suppressMessages(library(tidyverse))
library(readxl)
# Set working directory
nets_location = "M:/Data/NETS/2015/nets_2015_bayarea_v3.xlsx"
nets <- read_excel (nets_location,sheet="nets_raw")
install.packages("tibble")
install.packages("rlang")
install.packages("tibble")
# NETS Data Sole Proprietor Analysis.R
# National Establishment Time-Series 2015 data
# Import Libraries
suppressMessages(library(tidyverse))
library(readxl)
# Set working directory
nets_location = "M:/Data/NETS/2015/nets_2015_bayarea_v3.xlsx"
nets <- read_excel (nets_location,sheet="nets_raw")
# NETS Data Sole Proprietor Analysis.R
# National Establishment Time-Series 2015 data
# Import Libraries
suppressMessages(library(tidyverse))
library(readxl)
# Set working directory
nets_location = "M:/Data/NETS/2015/nets_2015_bayarea_v3.xlsx"
nets <- read_excel (nets_location,sheet="nets_raw")
install.packages("pkgconfig")
# NETS Data Sole Proprietor Analysis.R
# National Establishment Time-Series 2015 data
# Import Libraries
suppressMessages(library(tidyverse))
library(readxl)
# Set working directory
nets_location = "M:/Data/NETS/2015/nets_2015_bayarea_v3.xlsx"
nets <- read_excel (nets_location,sheet="nets_raw")
names(nets)
nets <- read_excel (nets_location,sheet="nets_raw") %>%
select(-"...1")
View(head(nets))
# NETS Data Sole Proprietor Analysis.R
# National Establishment Time-Series 2015 data
# Import Libraries
suppressMessages(library(tidyverse))
library(readxl)
# Set working directory
nets_location = "M:/Data/NETS/2015/nets_2015_bayarea_v3.xlsx"
nets <- read_excel (nets_location,sheet="nets_raw")
names(nets)
View(head(nets))
suppressMessages(library(tidyverse))
library(readxl)
nets2 <- nets %>%              #Filter out sole proprietors and summarize to TAZ
filter(emp>1) %>%
group_by(zone_id,naics_mtc) %>%
summarize(total=sum(emp))
nets2 <- nets %>%              #Filter out sole proprietors and summarize to TAZ
filter(emp>1)
class(nets$emp)
nets2 <- nets %>%              #Filter out sole proprietors and summarize to TAZ
filter(emp>1)
detach("package:bindrcpp", unload = TRUE)
detach("package:forcats", unload = TRUE)
detach("package:ggplot2", unload = TRUE)
detach("package:purrr", unload = TRUE)
detach("package:readr", unload = TRUE)
detach("package:readxl", unload = TRUE)
detach("package:stringr", unload = TRUE)
detach("package:tibble", unload = TRUE)
detach("package:tidyr", unload = TRUE)
detach("package:tidyverse", unload = TRUE)
detach("package:graphics", unload = TRUE)
detach("package:grDevices", unload = TRUE)
nets2 <- nets %>%              #Filter out sole proprietors and summarize to TAZ
filter(emp>1)
View(head(nets))
sum(nets$emp)
trial <- nets %>% filter(emp>1)
library(dplyr)
trial <- nets %>% filter(emp>1)
sum(trial$emp)
CHTS_location <- "M:/Data/HomeInterview/2010/Data from CHTS/Processed by PB 021715/CHTS2013_linkedtrips.RData"
load(CHTS_location)
readRDS(CHTS_location)
loadDB(CHTS_location)
load(CHTS_location)
CHTS_location <- "M:/Data/HomeInterview/2010/Data from CHTS/Processed by PB 021715/CHTS2013_linkedtrips.RData"
load(CHTS_location)
View(CHTS2013_linkedtrips)
sum(CHTS2013_linkedtrips$TYP_WKDY_WGT)
View(CHTS2013_linkedtrips)
unique(CHTS2013_linkedtrips$TRIPMODE)
sort(unique(CHTS2013_linkedtrips$TRIPMODE))
install.packages(c("httr", "rstudioapi", "tidycensus", "tidyverse"))
install.packages("tidycensus")
install.packages("tidyverse")
install.packages("tidycensus")
install.packages("rtools")
install.packages("tidycensus")
install.packages("rtools")
Sys.which("make")
install.packages("jsonlite", type = "source")
# CHTS2012-2013 VMT by Vehicle Type.R
# Analyze CHTS 2012-2103 Trip VMT by vehicle and fuel type
suppressMessages(library(dplyr))
wd <- "M:/Data/Requests/Flavia Tsang/VMT by Vehicle Type/"  # work directory
setwd(wd)
# Input person census files
CHTS_trip_location <- "M:/Data/HomeInterview/2010/Data from CHTS/Processed by PB 021715/CHTS2013_linkedtrips.RData"
PB_trip_location   <- "M:/Data/HomeInterview/2010/Data from CHTS/Processed by PB 021715/trips.csv"
Raw_place_location <- "M:/Data/HomeInterview/2010/Data from CHTS/_Full Data Release/CSV and XLS Versions/Deliv_PLACE.csv"
load (CHTS_trip_location)
PB_trip   <- read.csv(PB_trip_location,header=TRUE)
Raw_place <- read.csv(Raw_place_location,header=TRUE)
# CHTS2012-2013 VMT by Vehicle Type.R
# Analyze CHTS 2012-2103 Trip VMT by vehicle and fuel type
suppressMessages(library(dplyr))
wd <- "M:/Data/Requests/Flavia Tsang/VMT by Vehicle Type/"  # work directory
setwd(wd)
# Input relevant files
CHTS_trip_location <- "M:/Data/HomeInterview/2010/Data from CHTS/Processed by PB 021715/CHTS2013_linkedtrips.RData"
PB_trip_location   <- "M:/Data/HomeInterview/2010/Data from CHTS/Processed by PB 021715/trips.csv"
Raw_place_location <- "M:/Data/HomeInterview/2010/Data from CHTS/_Full Data Release/CSV and XLS Versions/Deliv_PLACE.csv"
Skim_location      <- "\\model2-d\Model2D-Share\Projects\2015_TM152_IPA_08\skims\hwyskm_csv"
load (CHTS_trip_location)
PB_trip   <- read.csv(PB_trip_location,header=TRUE)
Raw_place <- read.csv(Raw_place_location,header=TRUE)
Skim
install.packages("sf")
install.packages("sp")
install.packages("rgdal")
# Spatial_Join.r
# Script to join BART origins and destinations to VTA geography
# SI
# February 27, 2018
# Import libraries
library(sf)
library(sp)
library(rgdal)
suppressMessages(library(dplyr))
# Set up input and output directories
Unlinked_location <- "M:/Data/HomeInterview/2010/Data from CHTS/_Full Data Release/CSV and XLS Versions/Deliv_PLACE.csv"
TAZ_location      <- "M:/Data/GIS layers/TM1_taz/taz1454-utm.shp"
# Bring in VTA shape file and select VTA TAZs and geometry columns
TAZ <- st_read(TAZ_location)
class(TAZ)
names(TAZ)
# Spatial_Join.r
# Script to join BART origins and destinations to VTA geography
# SI
# February 27, 2018
# Import libraries
library(sf)
library(sp)
library(rgdal)
suppressMessages(library(dplyr))
# Set up input and output directories
Unlinked_location <- "M:/Data/HomeInterview/2010/Data from CHTS/_Full Data Release/CSV and XLS Versions/Deliv_PLACE.csv"
TAZ_location      <- "M:/Data/GIS layers/TM1_taz/taz1454-utm.shp"
# Bring in VTA shape file and select VTA TAZs and geometry columns
TAZ <- st_read(TAZ_location) %>%
select(TAZ1454,geometry)
unlinked <- read.csv(Unlinked_location,as.is=TRUE)
CHTS_unlinked <- unlinked
save(CHTS_unlinked, file = "M:/Data/HomeInterview/2010/Data from CHTS/_Full Data Release/CSV and XLS Versions/CHTS_unlinked.rdata")
# Spatial_Join.r
# Script to join BART origins and destinations to VTA geography
# SI
# February 27, 2018
# Import libraries
library(sf)
library(sp)
library(rgdal)
suppressMessages(library(dplyr))
# Set up input and output directories
Unlinked_location <- "M:/Data/HomeInterview/2010/Data from CHTS/_Full Data Release/CSV and XLS Versions/CHTS_unlinked.rdata"
TAZ_location      <- "M:/Data/GIS layers/TM1_taz/taz1454-utm.shp"
# Bring in CHTS unlinked trips and MTC TAZ1454 shapefile and select TAZ and geometry columns
unlinked <- load(Unlinked_location)
CHTS_unlinked <- unlinked
TAZ <- st_read(TAZ_location) %>%
select(TAZ1454,geometry)
Unlinked_location <- "M:/Data/HomeInterview/2010/Data from CHTS/_Full Data Release/CSV and XLS Versions/CHTS_unlinked.Rdata"
unlinked <- load(Unlinked_location)
View(head(CHTS_unlinked))
names(CHTS_unlinked)
View(head(CHTS_unlinked))
Place_detail_location <- "M:/Data/HomeInterview/2010/Data from CHTS/_Full Data Release/CSV and XLS Versions/LookUp_PLACE.csv"
place_detail <- read.csv(Place_detail_location,as.is=TRUE)
class(CHTS_unlinked$PERNO)
names(place_detail)
place_detail <- read.csv(Place_detail_location,as.is=TRUE) %>%
select(SAMPN,PERNO,PLANO,dXCORD,dYCORD,oXCORD,oYCORd)
View(head(CHTS_unlinked))
unlinked <- CHTS_unlinked %>%
select(SAMPN,PERNO,PLANO,MODE,TRIPNO)
place_detail <- read.csv(Place_detail_location,as.is=TRUE) %>%
select(SAMPN,PERNO,PLANO,dXCORD,dYCORD,oXCORD,oYCORD)
# Separate origin and destination into two files, remove missing data
place_origin <- place_detail %>%
select(SAMPN,PERNO,PLANO,oXCORD,oYCORD) %>%
filter(!is.na(oXCORD))
place_destination <- place_detail %>%
select(SAMPN,PERNO,PLANO,dXCORD,dYCORD)%>%
filter(!is.na(oYCORD))
# Assign projection for origin/destination and then convert projection into what's used in Bay Area - NAD83 / UTM zone 10N
place_origin_space <- st_as_sf(place_origin, coords = c("oXCORD", "oYCORD"), crs = 4326)
place_origin_space <- st_transform(place_origin_space,crs = 26910)
place_destination_space <- st_as_sf(place_destination, coords = c("dXCORD", "dYCORD"), crs = 4326)
place_destination_space <- st_transform(place_destination_space,crs = 26910)
# Convert TAZ shape to same project as origins, now NAD83 / UTM zone 10N
TAZ_shape <- st_transform(TAZ,crs = st_crs(place_origin_space))
place_origin <- place_detail %>%
select(SAMPN,PERNO,PLANO,oXCORD,oYCORD) %>%
filter(!is.na(oXCORD))
place_destination <- place_detail %>%
select(SAMPN,PERNO,PLANO,dXCORD,dYCORD)%>%
filter(!is.na(dXCORD))
# Assign projection for origin/destination and then convert projection into what's used in Bay Area - NAD83 / UTM zone 10N
place_origin_space <- st_as_sf(place_origin, coords = c("oXCORD", "oYCORD"), crs = 4326)
place_origin_space <- st_transform(place_origin_space,crs = 26910)
place_destination_space <- st_as_sf(place_destination, coords = c("dXCORD", "dYCORD"), crs = 4326)
place_destination_space <- st_transform(place_destination_space,crs = 26910)
# Convert TAZ shape to same project as origins, now NAD83 / UTM zone 10N
TAZ_shape <- st_transform(TAZ,crs = st_crs(place_origin_space))
names(place_origin_space)
names(TAZ_shape)
origin <- st_join(place_origin_space,TAZ_shape, join=st_within,left=TRUE)%>%
rename(Origin_TAZ=TAZ1454)
destination <- st_join(bart_destination_space,TAZ_shape, join=st_within,left=TRUE)%>%
rename(Destination_TAZ=TAZ1454)
destination <- st_join(place_destination_space,TAZ_shape, join=st_within,left=TRUE)%>%
rename(Destination_TAZ=TAZ1454)
View(place_detail)
View(CHTS_unlinked)
dim(CHTS_unlinked)
dim(place_origin)
place_destination <- place_detail %>%
select(SAMPN,PERNO,PLANO,dXCORD,dYCORD)%>%
filter(!is.na(dXCORD))
trial <- is.na(place_detail$oXCORD)
trial <- place_detail %>% filter(is.na(oXCORD))
trial2 <- place_detail %>% filter(is.na(oYCORD))
trial3 <- place_detail %>% filter(is.na(dXCORD))
View(trial2)
View(origin)
Weight_location       <- "M:/Data/HomeInterview/2010/Data from CHTS/Processed by PB 021715/Household_typical_weekday_weight.csv"
weight <- read.csv(Weight_location, as.is = TRUE)
# ACS 2015 PUMS Characteristics of Non-Rent Paying HHs.R
# Analyze PUMS data for characteristics of households that don't pay rent
# 2015 1-year PUMS data
# Import Libraries
suppressMessages(library(tidyverse))
# Input HH PUMS file and set working directory
HH_RDATA = "M:/Data/Census/PUMS/PUMS 2015/hbayarea15.Rdata"
P_RDATA   = "M:/Data/Census/PUMS/PUMS 2015/pbayarea15.Rdata"
WD = "C:/Users/sisrael/Documents/GitHub/regional_forecast/housing_income_share_metric"
setwd(WD)
# Set CPI values for 2000 and 2015 to inflate household income values, set up 2015-inflated breakpoints
CPI2000      <- 180.20
CPI2015      <- 258.57
CPI_ratio    <- CPI2015/CPI2000 # 2015 CPI/2000 CPI
break1       <- CPI_ratio*30000                   # First income break point for 2000$
break2       <- CPI_ratio*60000                   # Second income break point for 2000$
break3       <- CPI_ratio*100000                  # Third income break point for 2000$
# Bring in HH and person data
load (HH_RDATA)
load (P_RDATA)
# Recode data
household <- hbayarea15 %>%
filter(TEN %in% c(3,4) & !is.na(TEN)) %>% mutate(
Tenure=case_when(
TEN==3              ~ "Paid Rent",
TEN==4              ~ "Rent Free"
),
adjustedinc=HINCP*(ADJINC/1000000),                             # Adjusted income to constant 2015$
Quartile=case_when(
adjustedinc <  break1                         ~ "IncomeQ1",  # Income below 30k in 2000$
adjustedinc >= break1 & adjustedinc < break2  ~ "IncomeQ2",  # Income 30-60k in 2000$
adjustedinc >= break1 & adjustedinc < break3  ~ "IncomeQ3",  # Income 60-100k in 2000$
adjustedinc >  break3                         ~ "IncomeQ4"   # Income above 100k in 2000$
),
own_cost  =if_else(is.na(SMOCP),0L,SMOCP),                      # Owner costs if SMOCP is not NA
rent_cost =if_else(is.na(GRNTP),0L,GRNTP),                      # Renter costs if GRNTP is not NA
total_cost=own_cost + rent_cost                                 # Sum of renter and owner costs
) %>%
filter(!is.na(TEN)) %>%                                         # Keep cases that are not GQ/vacant
select(SERIALNO,PUMA,PUMA_Name,County_Name,HINCP,ADJINC, TEN,adjustedinc,
WGTP,own_cost,rent_cost,total_cost,Quartile,Tenure,BLD,
BUS,BATH,HHL,HHT)      # Select out relevant variables
# Join with selected person variables
person <- pbayarea15 %>%
select(SERIALNO,PUMA, SPORDER, AGEP) %>%
filter(SPORDER==1)
combined <- left_join(household,person,by=c("SERIALNO","PUMA")) %>% mutate(
Householder_Age=case_when(
AGEP<20             ~ "1_Under 20",
AGEP>=20 & AGEP<45  ~ "2_20 to 44",
AGEP>=45 & AGEP<64  ~ "3_45 to 64",
AGEP>=65            ~ "4_65 and older"
)
)
pums <- pbayarea15
install.packages("survey")
library(survey)
pums <- svydesign(id = ~1,
weights = pums$PWGTP,
data = pums,
repweights = "pwgtp[0-9]+",
type = "JKn",
scale = 4/80,
rscales = rep(1,80),
combined.weights = TRUE
pums <- svydesign(id = ~1,
weights = pums$PWGTP,
data = pums,
repweights = "pwgtp[0-9]+",
type = "JKn",
scale = 4/80,
rscales = rep(1,80),
combined.weights = TRUE
)
View(pums)
pums <- pbayarea15
pums <- svydesign(id = ~1,
weights = pums$PWGTP,
data = pums,
repweights = "pwgtp[0-9]+",
type = "JKn",
scale = 4/80,
rscales = rep(1,80),
combined.weights = TRUE
)
library(survey)
pums_p.rep <- svrepdesign(repweights = pums_p[207:286],
weights = pums_p[,7],
combined.weights = TRUE,
type = "Fay", rho = 1 - 1/sqrt(4),
scale = 1, rscales = 1,
data = pums_p)
pums_p.rep <- svrepdesign(repweights = pums_p[207:286],
weights = pums_p[,7],
combined.weights = TRUE,
type = "Fay", rho = 1 - 1/sqrt(4),
scale = 1, rscales = 1,
data = pums)
pums_p.rep <- svrepdesign(repweights = pums[207:286],
weights = pums[,7],
combined.weights = TRUE,
type = "Fay", rho = 1 - 1/sqrt(4),
scale = 1, rscales = 1,
data = pums)
pums_p.rep <- svrepdesign(repweights = pums[220:250],
weights = pums[,7],
combined.weights = TRUE,
type = "Fay", rho = 1 - 1/sqrt(4),
scale = 1, rscales = 1,
data = pums)
pums_p.rep <- svrepdesign(repweights = pums[208:287],
weights = pums[,7],
combined.weights = TRUE,
type = "Fay", rho = 1 - 1/sqrt(4),
scale = 1, rscales = 1,
data = pums)
pums_p.rep <- svrepdesign(repweights = pums[,208:287],
weights = pums[,7],
combined.weights = TRUE,
type = "Fay", rho = 1 - 1/sqrt(4),
scale = 1, rscales = 1,
data = pums)
table(household$Tenure,household$Quartile)
table(household$Tenure,household$HHT)
table(household$Tenure,household$HHL)
table(household$Tenure,household$BATH)
table(household$Tenure,household$BLD)
table(household$County_Name)
table(combined$Householder_Age)
table(combined$Tenure,combined$Householder_Age)
